The ``matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

Importing Module

    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Testing normal arguments

    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Testing  list of lists of integers or floats

    >>> matrix_divided([1, 2, 3], 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Testing row of the matrix of the different size

   >>> matrix_divided([1, 2, 3],[4, 5]], 3)
   Traceback (most recent call last):
         ...
	 TypeError: Each row of the matrix must have the same size

Testing div not a number
    >>> matrix_divided([1, 2, 3],[4, 5, 6]], 'a')
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Testing matrix not list
    >>> matrix_divided(1, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Testing div equal to zero
    >>> matrix_divided([1, 2, 3],[4, 5, 6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Testing no argument 
    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Testing more than two args 
    >>> matrix_divided([1, 2, 3],[4, 5, 6]], 1, 8)
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() takes 2 positional arguments
